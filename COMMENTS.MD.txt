# COMMENTS.md

Este projeto implementa uma aplica√ß√£o full stack de gerenciamento de matr√≠culas de alunos utilizando:

* **Frontend**: Vue 3 + TypeScript + Vuetify 3 + Vite
* **Backend**: ASP.NET Core 8 com Entity Framework Core
* **Banco de dados**: PostgreSQL (pode ser substitu√≠do por MySQL)

---

## ‚öôÔ∏è Decis√µes de Arquitetura

### Frontend

* **Framework**: Utiliza Vue 3 com script setup para simplicidade e legibilidade.
* **UI**: Vuetify 3 com auto import ativado (via `vite-plugin-vuetify`).
* **Roteamento**: Vue Router com rotas nomeadas (`students`, `students/new`, `students/edit/:id`).
* **Comunica√ß√£o com a API**: `axios` centralizado no servi√ßo `studentService.ts`.
* **Tipagem**: Estrutura tipada com base na conven√ß√£o PascalCase para compatibilidade direta com o backend.
* **Componentiza√ß√£o**: Separado em `StudentList.vue`, `StudentForm.vue` e `Sidebar.vue`.

### Backend

* **Camadas**: Segue separa√ß√£o em `API`, `Application` e `Infrastructure`, mesmo sem uso de DTOs.
* **Modelos**: A entidade `Student` √© utilizada diretamente na API (mapeada por EF).
* **Valida√ß√£o**: Realizada via `ModelState` autom√°tico da ASP.NET com tipos obrigat√≥rios (`string`, `int`).
* **CORS**: Habilitado manualmente no `Program.cs` para permitir comunica√ß√£o com o frontend (porta 5173).
* **Migrations**: Usadas migrations padr√£o do EF Core para cria√ß√£o de banco.

---

## ‚öñÔ∏è Bibliotecas Utilizadas

### Frontend

* `vue`
* `vue-router`
* `vite`
* `vuetify`
* `vite-plugin-vuetify`
* `axios`

### Backend

* `Microsoft.AspNetCore.Mvc`
* `Microsoft.EntityFrameworkCore`
* `Microsoft.EntityFrameworkCore.Design`
* `Microsoft.EntityFrameworkCore.Tools`

---

## üöÄ Melhorias Futuras (com tempo adicional)

* [ ] Implementar DTOs na camada `Application`
* [ ] Adicionar mensagens de sucesso/erro com `v-snackbar`
* [ ] Adicionar valida√ß√£o frontend com Vuelidate ou `rules` do Vuetify
* [ ] Criar testes unit√°rios (ex.: com `vitest`, `xUnit`)
* [ ] Deploy frontend (ex.: Vercel) e backend (ex.: Railway ou Azure)

---

## ‚ùå Requisitos obrigat√≥rios n√£o entregues

Todos os requisitos obrigat√≥rios foram entregues com sucesso ‚úÖ

---

## üöÄ Resultado Final

A aplica√ß√£o entrega um CRUD completo de alunos com foco em boas pr√°ticas de arquitetura, separa√ß√£o de responsabilidades, integra√ß√£o funcional entre front e back e UX fluida com Vuetify.
